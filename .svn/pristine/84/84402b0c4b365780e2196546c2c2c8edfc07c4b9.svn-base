//
//  DLChioceStoreListViewController.m
//  DiLiRestaurant
//
//  Created by 地利 on 2017/3/13.
//  Copyright © 2017年 地利. All rights reserved.
//

#import "DLChioceStoreListViewController.h"
#import "DLStoreListTableViewCell.h"
#import "AppDelegate.h"
#import <CoreLocation/CoreLocation.h>
#import "DLCityCode.h"
@interface DLChioceStoreListViewController ()<CLLocationManagerDelegate>
@property(assign,nonatomic)NSInteger pageIndex;
@property(assign,nonatomic)NSInteger totalCount;
@property(strong,nonatomic)CLLocationManager *locationManager;
@property(assign,nonatomic)BOOL isSuccessLocation;

@property(strong,nonatomic)DLCityCode *cityCode;


@end

@implementation DLChioceStoreListViewController
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    self.navigationController.navigationBarHidden=NO;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.title=@"选择门店";
    self.pageIndex=1;

    if (self.type==FirstType) {
        [self locationRequest];
    }
    else
        [self loadDataList];
    
    [self.tableView registerNib:[UINib nibWithNibName:NSStringFromClass([DLStoreListTableViewCell class]) bundle:nil] forCellReuseIdentifier:@"StoreList"];
    __weak typeof(self) unself=self;
    self.tableView.mj_footer=[MJRefreshAutoStateFooter footerWithRefreshingBlock:^{
        unself.pageIndex++;
        if (unself.totalCount<unself.pageIndex*PAGESIZE) {
            [unself.tableView.mj_footer endRefreshingWithNoMoreData];
        }
        else
            [unself loadDataList];
    }];
    if ([DLUserInfo GetVersionType]==NoneType) {
        [self addfootView];
    }
    
}
- (void)addfootView{
    UIView *footView=[[UIView alloc]initWithFrame:CGRectMake(0, 0, kScreenW, 60)];
    UIButton *button=[[UIButton alloc]initWithFrame:CGRectMake(50, 8, kScreenW-100, 44)];
    [button setTitle:@"没有想去的门店" forState:UIControlStateNormal];
    [button addTarget:self action:@selector(GoTeamVersion) forControlEvents:UIControlEventTouchUpInside];
    button.backgroundColor=THEMECOLOR;
    button.layer.cornerRadius=22;
    button.layer.masksToBounds=YES;
    [footView addSubview:button];
    self.tableView.tableFooterView=footView;
}

- (void)GoTeamVersion{
    [DLUserInfo SaveVersionType:TeamType];
    [((AppDelegate *)[UIApplication sharedApplication].delegate) enterMainVC];
}
- (void)loadDataList{
    NSMutableDictionary *dic=[NSMutableDictionary dictionary];
    if (self.type==FirstType) {
        [dic setObject:self.cityCode.sortCode forKey:@"cityCode"];
    }
    dic.transCode=@"C0101";
    dic.type=@"findAll";
    dic.pageSize=@PAGESIZE;
    dic.currentPage=@(self.pageIndex);
    [[GLNetWorkManager shareManager]requestType:POST andURL:REQUESTURL andServers:GET_HOMELIST andParmas:dic andComplition:^(id response, BOOL isuccess) {
        [self.tableView.mj_footer endRefreshing];
        if (isuccess&&[response[@"code"] isEqualToString:@"000000"]) {
            [self.dataArray addObjectsFromArray:[DLStoreListInfo mj_objectArrayWithKeyValuesArray:response[@"storeCustList"]]];
            if (self.type==OtherType) {
                [self.dataArray insertObject:[DLUserInfo getUserStore] atIndex:0];
            }
            self.totalCount=[response[@"totalCount"] integerValue];
            [self.tableView reloadData];
            if (self.type==OtherType) {
                [self.tableView selectRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0] animated:YES scrollPosition:UITableViewScrollPositionNone];
            }

        }
        MyLog(@"%@",response);
    }];
//    dic setObject:@"C0101" forKey:@""
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return self.dataArray.count;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return 1;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    DLStoreListTableViewCell *cell=[tableView dequeueReusableCellWithIdentifier:@"StoreList" forIndexPath:indexPath];
    cell.storeInfo=self.dataArray[indexPath.section];
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 70;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [DLUserInfo SaveStoreInfo:self.dataArray[indexPath.section]];
    if (self.selectStore) {
        self.selectStore(self.dataArray[indexPath.section]);
        [self.navigationController popViewControllerAnimated:YES];
    }
    else
    {
        ((AppDelegate *)[UIApplication sharedApplication].delegate).versionType=PersonalType;
        [((AppDelegate *)[UIApplication sharedApplication].delegate) enterMainVC];
    }
    
}

- (void)locationRequest{
    //检测定位功能是否开启
    if([CLLocationManager locationServicesEnabled]){
        
        if(!_locationManager){
            
            self.locationManager = [[CLLocationManager alloc] init];
            
            if([self.locationManager respondsToSelector:@selector(requestWhenInUseAuthorization)]){
                [self.locationManager requestWhenInUseAuthorization];
                [self.locationManager requestAlwaysAuthorization];
                
            }
            
            //设置代理
            [self.locationManager setDelegate:self];
            //设置定位精度
            [self.locationManager setDesiredAccuracy:kCLLocationAccuracyBest];
            //设置距离筛选
            [self.locationManager setDistanceFilter:100];
            //开始定位
            [self.locationManager startUpdatingLocation];            
        }
        
    }else{
        UIAlertController *alertView = [UIAlertController alertControllerWithTitle:@"您没有开启定位功能" message:nil preferredStyle:UIAlertControllerStyleActionSheet];
        [alertView addAction:[UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:nil]];
        [self presentViewController:alertView animated:YES completion:nil];
        
    }
}

//定位成功以后调用
- (void)locationManager:(CLLocationManager *)manager didUpdateLocations:(NSArray *)locations {
    [self.locationManager stopUpdatingLocation];
    
    CLLocation* location = locations.lastObject;
    if (!self.isSuccessLocation) {
       [self reverseGeocoder:location];
    }
    //定位会在停止之前调用多次
    self.isSuccessLocation=YES;
}

- (void)locationManager:(CLLocationManager *)manager didFailWithError:(NSError *)error
{
    MyLog(@"%@",error);
    [self getCityCodefromCityName:@"北京市"];
}

    //反地理编码
- (void)reverseGeocoder:(CLLocation *)currentLocation {
        
        CLGeocoder* geocoder = [[CLGeocoder alloc] init];
        [geocoder reverseGeocodeLocation:currentLocation completionHandler:^(NSArray *placemarks, NSError *error) {
            
            MyLog(@"array == %@",placemarks);
            
            if(error || placemarks.count == 0){
                MyLog(@"error = %@",error);
            }else{
                CLPlacemark* placemark = placemarks.firstObject;
                MyLog(@"dic == %@",[placemark addressDictionary]);
                [self  getCityCodefromCityName:[[placemark addressDictionary] objectForKey:@"City"]];
            }
        }];
}
- (void)getCityCodefromCityName:(NSString *)cityname{
    NSMutableDictionary *dic=[NSMutableDictionary dictionary];
    dic.transCode=@"M0019";
    dic.type=@"detail";
    [dic setObject:cityname forKey:@"name"];
    [[GLNetWorkManager shareManager]requestType:POST andURL:REQUESTURL andServers:GET_WORK_TYPE andParmas:dic andComplition:^(id response, BOOL isuccess) {
        MyLog(@"%@",response);
        if (isuccess&&[response[@"code"] isEqualToString:SUCCESSCODE]) {
//            [DLUserInfo ]
            self.cityCode=[DLCityCode mj_objectWithKeyValues:response[@"dis"]];
            [self loadDataList];
        }
    }];

}
@end
